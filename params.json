{"name":"Heroku-blog","tagline":"使用Maven管理的轻巧型个人博客，基于Spring3.1 MVC与Hibernate3.6，用于部署在Heroku上。","body":"heroku blog\r\n===========\r\n一个博客WEB应用，基于Spring3 MVC与Hibernate3， 前台使用JQuery， 用于部署在Heroku上，项目运行预览：[http://lzqwebsoft.herokuapp.com](http://lzqwebsoft.herokuapp.com \"我的空间\")。\r\n\r\n####部署开发环境\r\n如果你想二次开发本应用，可以将其部署在Eclipse上（本应用使用Jetty作为容器运行）,如下：\r\n\r\n#####1. 下载\r\n点击[https://github.com/lzqwebsoft/heroku-blog](https://github.com/lzqwebsoft/heroku-blog)页面中的<b>ZIP</b>链接将其打包成zip文件，下载到本地。或使用git命令将其克隆到本地：\r\n\r\n`$git clone https://github.com/lzqwebsoft/heroku-blog.git`\r\n\r\n#####2. 安装maven\r\n本应用使用maven管理，因此事先要确保您的机器上已经安装maven，在命令行下输入:\r\n\r\n`$mvn --version`\r\n\r\n查看是否输出如下信息：\r\n<pre>\r\nApache Maven 3.0.4 (r1232337; 2012-01-17 16:44:56+0800)\r\nMaven home: D:\\Program Files\\apache-maven-3.0.4\\bin\\..\r\nJava version: 1.6.0_10-rc2, vendor: Sun Microsystems Inc.\r\nJava home: C:\\Program Files\\Java\\jdk1.6.0_10\\jre\r\nDefault locale: en_US, platform encoding: Cp1252\r\nOS name: \"windows vista\", version: \"6.1\", arch: \"x86\", family: \"windows\"\r\n</pre>\r\n如果提示的是找不到mvn命令，说明你还没有安装maven，或没有安装成功。\r\n\r\n请到[http://maven.apache.org/download.cgi](http://maven.apache.org/download.cgi)下载maven，然后将maven的bin目录加入到系统的环境变量中。\r\n#####3. 在Eclipse中配置jetty并调试\r\n+ 将下载的heroku-blog应用目录导入到Eclipse项目中。\r\n+ 将M2_REPO加入到Eclipse的classpath中（这一步即是将Maven的仓库包导入为Eclipse的ClassPath），使用菜单：<br />\r\nWindow > Preferences. Select the Java > Build Path > Classpath Variables page；<br />接着点击New，新建M2_REPO变量，路径设为Maven的仓库路径，默认为：(windows)C:\\Documents and Settings\\（当前用户）\\.m2\\repository,(Linux)~\\.m2\\repository。\r\n+ 配置一个外部工具，来运行Jetty：<br />选择菜单Run->External Tools->External Tools Configurations...;在左边选择Program，再右击点New.命名为jetty。<br />配置Location为mvn的完整目录，Windows下：D:\\Program Files\\apache-maven-3.0.4\\bin\\mvn.bat，Linux下：使用选择无后辍的mvn文件。<br />选择Working Directory为本项目。<br />Arguments填写：`-Djetty.port=9000 jetty:run`<br />再点Enviroment选择卡：加入MAVEN_OPTS变量，值为：`-Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,address=4000,server=y,suspend=n`<br />最后点点APPLY，再关闭本对话框。设置好后，点击Run->External Tools->Origanize favirites...加入\r\n+ 配置jetty调试: 选择菜单Run->Debug Configarutions....弹出对话框，在其中选择Remote Java Application，右击New，Name中输入heroku-blog，Project选择本应用，Host填localhost，port为9000。其实的默认，填好后Close。\r\n+ 配置jetty stop: 选择菜单Run->External Tools->External Tools Configurations...，选择Program，右击New，Name为jetty-stop,Location为mvn.bat或mvn的完整路径，Working Directory为本项目。Arguments填写：`jetty:stop`。\r\n\r\n这样运行本应用将只需选择jetty就行了，调试是在jetty启动后，再选heroku-blog，停止jetty只需选择jetty-stop.\r\n\r\n运行成功后在浏览器中输入:[http://localhost:9000/heroku-blog](http://localhost:9000/heroku-blog)启动本程序。\r\n\r\n**注意**，在项目下的pom.xml文件中检查是否存在，如下配置：\r\n<pre>\r\n&lt;build>\r\n    &lt;plugins&gt;\r\n        &lt;plugin&gt;\r\n            &lt;groupId>org.mortbay.jetty&lt;/groupId&gt;\r\n            &lt;artifactId>maven-jetty-plugin&lt;/artifactId&gt;\r\n            &lt;configuration&gt;\r\n              &lt;!-- 停止jetty --&gt;\r\n              &lt;stopPort>9966&lt;/stopPort&gt;\r\n              &lt;stopKey>foo&lt;/stopKey&gt;\r\n          &lt;/configuration&gt;\r\n        &lt;/plugin&gt;\r\n    &lt;/plugins&gt;\r\n&lt;/build>\r\n</pre>\r\n\r\n在使用本程序时还要注意配置数据库的连接信息（本地运行使用MySQL），根据个人情况配置：`src\\main\\resources\\database.properties`文件。同时在运行前，需要先在SQL环境中执行databaseDesign目录中的几个sql脚本程序，来导入程序运行时的初始化数据。\r\n更多关于Maven与Jetty在Eclipse中的开发配置，可以参考下列博客：<br>\r\n[http://blog.csdn.net/whuslei/article/details/6647275](http://blog.csdn.net/whuslei/article/details/6647275)<br>\r\n[http://www.blogjava.net/alwayscy/archive/2007/05/19/118584.html](http://www.blogjava.net/alwayscy/archive/2007/05/19/118584.html)\r\n<br/>\r\n####部署到Heroku云端\r\n使用本项目的源码，只需做一点点的更改，就可以将其部署在Heroku云端，从而拥有一个真正的博客。\r\n\r\n#####1. 配置你的Heroku环境\r\n首先你需要到Heroku官网上下载heroku客户端工具包，并申请一个heroku帐号，详情可以到Heroku的官网的[开发者中心](https://devcenter.heroku.com/articles/quickstart)，查看相应的博客，也可以到我的博客查看翻译后的文章：[http://blog.csdn.net/xianqiang1/article/category/1345606](http://blog.csdn.net/xianqiang1/article/category/1345606).\r\n\r\n#####2. 配置数据库信息\r\n由于heroku提供的免费的数据库是PostgreSQL，因此需要修改数据库配置文件：`src/main/resources/spring-database-context.xml`，关于数据源的配署如下：\r\n<pre>\r\n&lt;bean id=\"dbUrl\" class=\"java.net.URI\"&gt;\r\n    &lt;constructor-arg value=\"#{systemEnvironment['DATABASE_URL']}\"/&gt;\r\n&lt;/bean&gt;\r\n&lt;bean id=\"dataSource\" class=\"org.apache.commons.dbcp.BasicDataSource\" destroy-method=\"close\"&gt;\r\n    &lt;property name=\"driverClassName\" value=\"org.postgresql.Driver\"/&gt;\r\n    &lt;property name=\"url\" value=\"#{ 'jdbc:postgresql://' + @dbUrl.getHost() + @dbUrl.getPath() }\"/&gt;\r\n    &lt;property name=\"username\" value=\"#{ @dbUrl.getUserInfo().split(':')[0] }\"/&gt;\r\n    &lt;property name=\"password\" value=\"#{ @dbUrl.getUserInfo().split(':')[1] }\"/&gt;\r\n&lt;/bean&gt;\r\n</pre>\r\n再更改数据的驱动类为`org.hibernate.dialect.PostgreSQLDialect`，并关闭hibernate的SQL显示，如下：\r\n<pre>\r\n&lt;prop key=\"hibernate.dialect\"&gt;org.hibernate.dialect.PostgreSQLDialect&lt;/prop&gt;\r\n&lt;prop key=\"hibernate.show_sql\"&gt;false&lt;/prop&gt;\r\n</pre>\r\n当然了部署到heroku上的数据库是可以通过Add-ons功能更改的，也不一定要更改为PostgreSQL，这都要根据你为heroku上的应用添加的数据库来决定，详情可以参考heroku的帮助文档，这里个人还是比较推荐使用PostgreSQL数据库。\r\n\r\n#####3. 配置程序自启动Servlet类\r\n由于本程序在启动时，需要一些初始化的数据，因此需要一种方法，确保程序在第一次初始化时，将一些必要的数据导入数据库，这就是编写自启动Servlet类的目地；默认情况下自启动Servlet类的配置是关闭的，需要到`src/main/webapp/WEB-INF/web.xml`文件中将其打开，如下：\r\n<pre>\r\n&lt;servlet&gt;\r\n    &lt;servlet-name>AutoRunServlet&lt;/servlet-name&gt; \r\n    &lt;servlet-class&gt;com.herokuapp.lzqwebsoft.servlet.InitDatabaseServlet&lt;/servlet-class&gt;\r\n    &lt;load-on-startup&gt;2&lt;/load-on-startup&gt; \r\n&lt;/servlet&gt;\r\n</pre>\r\n从上面的配置可知控制程序自启动的Servlet类是`com.herokuapp.lzqwebsoft.servlet.InitDatabaseServlet`,它控制着登录本博客应用的初始帐号与密码，还有一些登录后的博客设置信息与管理的菜单。\r\n默认情况下提供登录本博客的初始帐户名是websoft,密码是通过SHA1加密的123456。\r\n#####4. 配置邮件服务\r\n本博客拥有博客新评论邮件提示与邮件验证找回密码的功能，也就是说当你博客有网友的新评论或进行找回密码时，会由你事先配置好的邮件服务器中发送一份邮件到你指定的邮箱中，予以提示。<br />\r\n控制新评论的邮箱是由`blog_infos`表中的邮件项控制，可到`com.herokuapp.lzqwebsoft.servlet.InitDatabaseServlet`中修改，默认情况下设置如下：\r\n<pre>\r\nstmt.executeUpdate(\"INSERT INTO blog_infos VALUES ('1', '飘痕', '心诚则灵', '关于内容', 'lzqwebsoft@gmail.com', '0', '2012-12-19 17:26:32');\");\r\n</pre>\r\n即当有新评论时，`lzqwebsoft@gmail.com`邮箱会收到提示。<br />\r\n控制用户帐户的变更是由`users`表的邮件项控制，同样需要到`com.herokuapp.lzqwebsoft.servlet.InitDatabaseServlet`中修改，默认情况下设置如下：\r\n<pre>\r\nstmt.executeUpdate(\"INSERT INTO users VALUES ('1', 'websoft', '31bde66d9873701bed3e0d0ffd626f9d235583', '751939573@qq.com', '8e04ee997d285749ecfcd280a3e1e9', '', '0','2012-12-17 16:02:26', '2012-12-13 16:43:03', '2012-12-17 16:02:06');\");\r\n</pre>\r\n即当用户有找回密码的操作时，邮件`751939573@qq.com`会收到提示。\r\n\r\n下面最为重要的就是配置邮件服务，就是使用什么邮件来向上面两个邮箱发送邮件，关于服务器端的邮件配置，在`src/main/resources/mail-config.properties`文件中，如下：\r\n<pre>\r\nmail.smtp.host=smtp.gmail.com\r\nmail.smtp.auth=true\r\nmail.smtp.socketFactory.class=javax.net.ssl.SSLSocketFactory\r\nmail.smtp.socketFactory.fallback=false\r\nmail.smtp.port=465\r\nmail.smtp.socketFactory.port=465\r\n\r\nmail.address.from=lzqwebsoft@gmail.com\r\nmail.address.username=\r\nmail.address.password=\r\nmail.isDebug=false\r\n</pre>\r\n上面使用的配置邮件服务采用的是google的邮件服务，你可以根据个人的情况修改，可能对于你的邮箱，上面的有些项可能不是必须的，那么你可能还要修改`src/main/java/com/herokuapp/lzqwebsoft/util/MailUtil.java`文件中的邮件配置代码。\r\n#####5. 修改pom.xml\r\n由于部署在本地时使用的是mysql数据库，而pushing上传到Heroku云端使用的是PostgreSQL数据库，因些需要修改项目依赖的驱动架包，即需要对pom.xml文件进行一定的更改，如下上传Heroku上时应该使用如下pom.xml文件:\r\n<pre>\r\n&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\r\n&lt;project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n\txsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\"&gt;\r\n\t&lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;\r\n\t&lt;groupId&gt;org.herokuapp.lzqwebsoft&lt;/groupId&gt;\r\n\t&lt;version&gt;1.0.1&lt;/version&gt;\r\n\t&lt;artifactId&gt;heroku-blog&lt;/artifactId&gt;\r\n\t&lt;packaging&gt;war&lt;/packaging&gt;\r\n\t\r\n\t&lt;properties&gt;\r\n\t    &lt;spring.version&gt;3.1.3.RELEASE&lt;/spring.version&gt;\r\n\t&lt;/properties&gt;\r\n\t\r\n\t&lt;dependencies&gt;\r\n\t    &lt;dependency&gt;\r\n\t        &lt;!-- Logs --&gt;\r\n\t        &lt;groupId&gt;log4j&lt;/groupId&gt;\r\n\t        &lt;artifactId&gt;log4j&lt;/artifactId&gt;\r\n\t        &lt;version&gt;1.2.17&lt;/version&gt;\r\n\t        &lt;scope&gt;runtime&lt;/scope&gt;\r\n\t    &lt;/dependency&gt;\r\n\t    &lt;!-- Servlet --&gt;\r\n\t    &lt;dependency&gt;\r\n\t        &lt;groupId&gt;org.eclipse.jetty&lt;/groupId&gt;\r\n\t        &lt;artifactId&gt;jetty-servlet&lt;/artifactId&gt;\r\n\t        &lt;version&gt;7.6.0.v20120127&lt;/version&gt;\r\n\t    &lt;/dependency&gt;\r\n\t    &lt;dependency&gt;\r\n\t        &lt;groupId&gt;javax.servlet&lt;/groupId&gt;\r\n\t        &lt;artifactId&gt;servlet-api&lt;/artifactId&gt;\r\n\t        &lt;version&gt;2.5&lt;/version&gt;\r\n\t    &lt;/dependency&gt;\r\n\t    &lt;!-- JSTL标签库 --&gt;\r\n\t    &lt;dependency&gt;\r\n\t        &lt;groupId&gt;javax.servlet&lt;/groupId&gt;\r\n\t        &lt;artifactId&gt;jstl&lt;/artifactId&gt;\r\n\t        &lt;version&gt;1.1.2&lt;/version&gt;\r\n\t    &lt;/dependency&gt;\r\n\t    &lt;dependency&gt;\r\n\t        &lt;groupId&gt;taglibs&lt;/groupId&gt;\r\n\t        &lt;artifactId&gt;standard&lt;/artifactId&gt;\r\n\t        &lt;version&gt;1.1.2&lt;/version&gt;\r\n\t    &lt;/dependency&gt;\r\n\t\r\n\t    &lt;!-- Jakarta Commons FileUplolad及Jakarta Commons io的类包，实现文件上传 --&gt;\r\n\t    &lt;dependency&gt;\r\n\t\t   &lt;groupId&gt;commons-fileupload&lt;/groupId&gt;\r\n\t\t   &lt;artifactId&gt;commons-fileupload&lt;/artifactId&gt;\r\n\t\t   &lt;version&gt;1.2.2&lt;/version&gt;\r\n\t\t&lt;/dependency&gt;\r\n        &lt;dependency&gt;\r\n\t\t   &lt;groupId&gt;commons-io&lt;/groupId&gt;\r\n\t\t   &lt;artifactId&gt;commons-io&lt;/artifactId&gt;\r\n\t\t   &lt;version&gt;2.4&lt;/version&gt;\r\n\t\t&lt;/dependency&gt;\r\n\t\t\r\n\t\t&lt;!--Java邮件支持--&gt;\r\n\t\t&lt;dependency&gt;\r\n\t\t\t&lt;groupId&gt;com.sun.mail&lt;/groupId&gt;\r\n\t\t\t&lt;artifactId&gt;javax.mail&lt;/artifactId&gt;\r\n\t\t\t&lt;version&gt;1.4.5&lt;/version&gt;\r\n\t\t&lt;/dependency&gt;\r\n\t\t&lt;dependency&gt;\r\n\t\t    &lt;groupId&gt;javax.activation&lt;/groupId&gt;\r\n\t\t    &lt;artifactId&gt;activation&lt;/artifactId&gt;\r\n\t\t    &lt;version&gt;1.1.1&lt;/version&gt;\r\n\t\t&lt;/dependency&gt;\r\n\t\t\r\n\t\t&lt;!-- Spring3 框架 --&gt;\r\n\t\t&lt;dependency&gt;\r\n\t\t\t&lt;groupId&gt;org.springframework&lt;/groupId&gt;\r\n\t\t\t&lt;artifactId&gt;spring-core&lt;/artifactId&gt;\r\n\t\t\t&lt;version&gt;${spring.version}&lt;/version&gt;\r\n\t\t&lt;/dependency&gt;\r\n\t\t\r\n\t\t&lt;dependency&gt;\r\n\t\t\t&lt;groupId&gt;org.springframework&lt;/groupId&gt;\r\n\t\t\t&lt;artifactId&gt;spring-beans&lt;/artifactId&gt;\r\n\t\t\t&lt;version&gt;${spring.version}&lt;/version&gt;\r\n\t\t&lt;/dependency&gt;\r\n\t\t\r\n\t\t&lt;dependency&gt;\r\n\t\t\t&lt;groupId&gt;org.springframework&lt;/groupId&gt;\r\n\t\t\t&lt;artifactId&gt;spring-context&lt;/artifactId&gt;\r\n\t\t\t&lt;version&gt;${spring.version}&lt;/version&gt;\r\n\t\t&lt;/dependency&gt;\r\n \r\n\t\t&lt;dependency&gt;\r\n\t\t\t&lt;groupId&gt;org.springframework&lt;/groupId&gt;\r\n\t\t\t&lt;artifactId&gt;spring-web&lt;/artifactId&gt;\r\n\t\t\t&lt;version&gt;${spring.version}&lt;/version&gt;\r\n\t\t&lt;/dependency&gt;\r\n \r\n\t\t&lt;dependency&gt;\r\n\t\t\t&lt;groupId&gt;org.springframework&lt;/groupId&gt;\r\n\t\t\t&lt;artifactId&gt;spring-webmvc&lt;/artifactId&gt;\r\n\t\t\t&lt;version&gt;${spring.version}&lt;/version&gt;\r\n\t\t&lt;/dependency&gt;\r\n\t\t\r\n\t\t&lt;!--使用Spring框架的orm进行sessionFactory的管理--&gt;\r\n        &lt;dependency&gt;\r\n            &lt;groupId&gt;org.springframework&lt;/groupId&gt;\r\n            &lt;artifactId&gt;spring-orm&lt;/artifactId&gt;\r\n            &lt;version&gt;${spring.version}&lt;/version&gt;\r\n            &lt;classifier/&gt;\r\n        &lt;/dependency&gt;\r\n        \r\n        &lt;!--添加Hibernate支持--&gt;\r\n        &lt;dependency&gt;\r\n            &lt;groupId&gt;org.hibernate&lt;/groupId&gt;\r\n            &lt;artifactId&gt;hibernate-core&lt;/artifactId&gt;\r\n            &lt;version&gt;3.6.4.Final&lt;/version&gt;\r\n        &lt;/dependency&gt;\r\n        \r\n        &lt;!-- 使用的数据库连接池包 --&gt;\r\n        &lt;!-- Hibernate gives you a choice of bytecode providers between cglib and javassist --&gt;\r\n        &lt;dependency&gt;\r\n            &lt;groupId&gt;javassist&lt;/groupId&gt;\r\n            &lt;artifactId&gt;javassist&lt;/artifactId&gt;\r\n            &lt;version&gt;3.9.0.GA&lt;/version&gt;\r\n        &lt;/dependency&gt;\r\n        &lt;dependency&gt;\r\n            &lt;groupId&gt;commons-pool&lt;/groupId&gt;\r\n            &lt;artifactId&gt;commons-pool&lt;/artifactId&gt;\r\n            &lt;version&gt;1.5.4&lt;/version&gt;\r\n            &lt;classifier/&gt;\r\n            &lt;exclusions&gt;\r\n                &lt;exclusion&gt;\r\n                    &lt;groupId&gt;commons-logging&lt;/groupId&gt;\r\n                    &lt;artifactId&gt;commons-logging&lt;/artifactId&gt;\r\n                &lt;/exclusion&gt;\r\n            &lt;/exclusions&gt;\r\n        &lt;/dependency&gt;\r\n        &lt;dependency&gt;\r\n            &lt;groupId&gt;commons-dbcp&lt;/groupId&gt;\r\n            &lt;artifactId&gt;commons-dbcp&lt;/artifactId&gt;\r\n            &lt;version&gt;1.3&lt;/version&gt;\r\n            &lt;classifier/&gt;\r\n            &lt;exclusions&gt;\r\n                &lt;exclusion&gt;\r\n                    &lt;groupId&gt;commons-logging&lt;/groupId&gt;\r\n                    &lt;artifactId&gt;commons-logging&lt;/artifactId&gt;\r\n                &lt;/exclusion&gt;\r\n                &lt;exclusion&gt;\r\n                    &lt;groupId&gt;commons-pool&lt;/groupId&gt;\r\n                    &lt;artifactId&gt;commons-pool&lt;/artifactId&gt;\r\n                &lt;/exclusion&gt;\r\n                &lt;exclusion&gt;\r\n                    &lt;groupId&gt;xerces&lt;/groupId&gt;\r\n                    &lt;artifactId&gt;xerces&lt;/artifactId&gt;\r\n                &lt;/exclusion&gt;\r\n                &lt;exclusion&gt;\r\n                    &lt;groupId&gt;xerces&lt;/groupId&gt;\r\n                    &lt;artifactId&gt;xercesImpl&lt;/artifactId&gt;\r\n                &lt;/exclusion&gt;\r\n                &lt;exclusion&gt;\r\n                    &lt;groupId&gt;xml-apis&lt;/groupId&gt;\r\n                    &lt;artifactId&gt;xml-apis&lt;/artifactId&gt;\r\n                &lt;/exclusion&gt;\r\n            &lt;/exclusions&gt;\r\n        &lt;/dependency&gt;\r\n\t\t\r\n\t\t&lt;!-- MYSQL驱动包 --&gt;\r\n        &lt;!--&lt;dependency&gt;\r\n            &lt;groupId&gt;mysql&lt;/groupId&gt;\r\n            &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;\r\n            &lt;version&gt;5.1.9&lt;/version&gt;\r\n        &lt;/dependency&gt;--&gt;\r\n        \r\n        &lt;!-- PostgreSQL驱动包 --&gt;\r\n        &lt;dependency&gt;\r\n            &lt;groupId&gt;postgresql&lt;/groupId&gt;\r\n            &lt;artifactId&gt;postgresql&lt;/artifactId&gt;\r\n            &lt;version&gt;9.0-801.jdbc4&lt;/version&gt;\r\n        &lt;/dependency&gt;\r\n\r\n\t&lt;/dependencies&gt;\r\n\r\n\t&lt;build&gt;\r\n\t\t&lt;plugins&gt;\r\n\t\t    &lt;!--&lt;plugin&gt;\r\n                &lt;groupId&gt;org.mortbay.jetty&lt;/groupId&gt;\r\n                &lt;artifactId&gt;maven-jetty-plugin&lt;/artifactId&gt;\r\n                &lt;configuration&gt;\r\n                  停止jetty --&gt;\r\n                  &lt;!--&lt;stopPort&gt;9966&lt;/stopPort&gt;\r\n                  &lt;stopKey&gt;foo&lt;/stopKey&gt;\r\n              &lt;/configuration&gt;\r\n            &lt;/plugin&gt;--&gt;\r\n\t\t\t&lt;plugin&gt;\r\n\t\t\t\t&lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;\r\n\t\t\t\t&lt;artifactId&gt;maven-dependency-plugin&lt;/artifactId&gt;\r\n\t\t\t\t&lt;version&gt;2.3&lt;/version&gt;\r\n\t\t\t\t&lt;executions&gt;\r\n\t\t\t\t\t&lt;execution&gt;\r\n\t\t\t\t\t\t&lt;phase&gt;package&lt;/phase&gt;\r\n\t\t\t\t\t\t&lt;goals&gt;\r\n\t\t\t\t\t\t\t&lt;goal&gt;copy&lt;/goal&gt;\r\n\t\t\t\t\t\t&lt;/goals&gt;\r\n\t\t\t\t\t\t&lt;configuration&gt;\r\n\t\t\t\t\t\t\t&lt;artifactItems&gt;\r\n\t\t\t\t\t\t\t\t&lt;artifactItem&gt;\r\n\t\t\t\t\t\t\t\t\t&lt;groupId&gt;org.mortbay.jetty&lt;/groupId&gt;\r\n\t\t\t\t\t\t\t\t\t&lt;artifactId&gt;jetty-runner&lt;/artifactId&gt;\r\n\t\t\t\t\t\t\t\t\t&lt;version&gt;7.4.5.v20110725&lt;/version&gt;\r\n\t\t\t\t\t\t\t\t\t&lt;destFileName&gt;jetty-runner.jar&lt;/destFileName&gt;\r\n\t\t\t\t\t\t\t\t&lt;/artifactItem&gt;\r\n\t\t\t\t\t\t\t&lt;/artifactItems&gt;\r\n\t\t\t\t\t\t&lt;/configuration&gt;\r\n\t\t\t\t\t&lt;/execution&gt;\r\n\t\t\t\t&lt;/executions&gt;\r\n\t\t\t&lt;/plugin&gt;\r\n\t\t&lt;/plugins&gt;\r\n\t&lt;/build&gt;\r\n&lt;/project&gt;\r\n</pre>\r\n#####6. 上传部署\r\n根据上面的步骤修改后，最后就可以使用Git将本应用上传至Heroku上了，在上传之前最好先在本地跑一下，看是否成功；\r\n关于使用Git部署上传Java应用可以参考翻译的官网博客：\r\n[http://blog.csdn.net/xianqiang1/article/category/1345606](http://blog.csdn.net/xianqiang1/article/category/1345606)<br />\r\n由于本项目还在开发中，可能还有一些BUG，欢迎聪明的你来拍砖。","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}